/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

@class NSString;
@interface MaiMaiClient : NSObject {
	NSString* _mmid;
	NSString* _basePath;
}
@property(retain, nonatomic) NSString* accessToken;
@property(retain, nonatomic) NSString* mmid;
@property(retain, nonatomic) NSString* basePath;
+(id)sharedClient;
-(id)checkResult:(id)result error:(id*)error;
-(id)rac_ping_log:(id)log parameters:(id)parameters;
-(id)rac_download:(id)download;
-(id)rac_httpRequestWithoutLogin:(id)login parameters:(id)parameters;
-(id)rac_httpRequest:(id)request parameters:(id)parameters;
-(id)rac_normalRequest:(id)request parameters:(id)parameters;
-(id)rac_normalRequest:(id)request;
-(id)makeHttpClient:(BOOL)client withRootURL:(id)rootURL responseSerializer:(id)serializer;
-(id)makeHttpClient:(BOOL)client withRootURL:(id)rootURL;
-(id)makeHttpClient:(BOOL)client responseSerializer:(id)serializer;
-(id)makeHttpClient:(BOOL)client;
-(void)resetBasePath:(id)path;
-(id)init;
-(id)rac_clear_audio_unread:(long long)unread;
-(id)rac_spreadCard:(id)card type:(int)type toMsg:(long long)msg orToContact:(id)contact withMessage:(id)message;
-(id)rac_withdrawDialog:(long long)dialog fromMessage:(long long)message;
-(id)rac_spreadGossip:(unsigned long long)gossip toMsg:(long long)msg orToContact:(id)contact withMessage:(id)message;
-(id)rac_spreadFeed:(unsigned long long)feed toMsg:(long long)msg orToContact:(id)contact withMessage:(id)message;
-(id)rac_getGroupLastActiveTime:(long long)time;
-(id)rac_removeUsers:(id)users fromMessage:(long long)message;
-(id)rac_getMid:(id)mid mtype:(int)mtype;
-(id)rac_createGroupMid:(id)mid;
-(id)rac_clearGroupAvatar:(long long)avatar;
-(id)rac_shareGroupToFeed:(long long)feed;
-(id)rac_setGroupEnMute:(long long)mute value:(BOOL)value;
-(id)rac_setGroupNoAdminAdd:(long long)add value:(BOOL)value;
-(id)rac_setGroupEnanony:(long long)enanony value:(BOOL)value;
-(id)rac_setGroupSearchable:(long long)searchable value:(BOOL)value;
-(id)rac_setGroup:(long long)group name:(id)name desc:(id)desc;
-(id)rac_applyGroup:(long long)group withReason:(id)reason;
-(id)rac_searchMsgGroups:(id)groups page:(unsigned)page limit:(unsigned)limit cat_id:(int)anId cacheMode:(int)mode;
-(id)rac_gossipShareInfo:(unsigned long long)info;
-(id)rac_checkAppstoreVersion;
-(id)rac_checkVersion:(id)version version:(id)version2;
-(id)sync_global_config:(id*)config;
-(id)sync_getCards:(id)cards;
-(id)rac_getCards:(id)cards;
-(id)rac_publish:(id)publish;
-(id)rac_global_config;
-(id)rac_sign_up_tips;
-(id)rac_check_bundle:(id)bundle;
-(id)sdkUrlForPath:(id)path;
-(id)rac_getContactProcess:(BOOL)process;
-(id)rac_getProtocContactCard;
-(id)rac_setJudgeFiles:(id)files;
-(id)rac_getJudgers:(id)judgers page:(unsigned)page;
-(id)rac_passiveUnblockUserFeedsWithMMid:(id)mmid;
-(id)rac_passiveBlockUserFeedsWithMMid:(id)mmid;
-(id)rac_initJudge:(id)judge;
-(id)rac_loadJudgers:(BOOL)judgers judgeMe:(BOOL)me;
-(id)rac_loadJudgers:(BOOL)judgers;
-(id)rac_unblockUserFeedsWithMMid:(id)mmid;
-(id)rac_blockUserFeedsWithMMid:(id)mmid;
-(id)rac_unblockUserWithMMid:(id)mmid;
-(id)rac_getBlackUserList:(unsigned)list page:(unsigned)page limit:(unsigned)limit;
-(id)rac_getBlackInfoWithMMID:(id)mmid;
-(id)rac_blockUserWithMMid:(id)mmid;
-(id)rac_inviteFriendUseMM:(id)mm mobile:(id)mobile;
-(id)rac_preVerifyFriendWithMMid:(id)mmid;
-(id)rac_searchContact:(unsigned)contact keyword:(id)keyword page:(unsigned)page limit:(unsigned)limit containMe:(unsigned)me groups:(id)groups rangeRenmai:(id)renmai rangeInapp:(id)inapp;
-(id)rac_getContactListByApi:(id)api page:(unsigned)page limit:(unsigned)limit;
-(id)rac_getMyFriendIdsWithType:(id)type gname:(id)gname dist:(unsigned)dist;
-(id)rac_getMyFriendsWithType:(id)type gname:(id)gname dist:(unsigned)dist page:(unsigned)page limit:(unsigned)limit;
-(id)rac_decFriendLVWithMMid:(id)mmid lv:(int)lv;
-(id)rac_incFriendLVWithMMid:(id)mmid lv:(int)lv attach:(id)attach;
-(id)rac_breakFriendWithMMid:(id)mmid;
-(id)rac_verifyContactExchange:(id)exchange level:(int)level;
-(id)rac_getContactDetailWithMMid:(id)mmid cacheMode:(int)mode messageId:(int)anId;
-(id)rac_getContactFeedsStartWithPage:(int)page limit:(int)limit;
-(id)rac_interestJob:(long long)job params:(id)params;
-(id)rac_getResumes:(unsigned)resumes type:(unsigned)type page:(unsigned)page limit:(unsigned)limit;
-(id)rac_sendSuggestionRequest:(unsigned)request agent:(id)agent;
-(id)rac_getSuggestionAgents:(unsigned)agents page:(unsigned)page limit:(unsigned)limit;
-(id)rac_getJobDetail:(unsigned)detail opentype:(unsigned)opentype;
-(id)rac_dennyResumeWithJobId:(int)jobId mmid:(id)mmid recall:(int)recall;
-(id)rac_relayResume:(id)resume toMmid:(id)mmid;
-(id)rac_deliverResumeWithJobId:(int)jobId openjobType:(int)type ignoreResultButton:(BOOL)button agent:(id)agent;
-(id)rac_getMyResumeDetailWithJobId:(int)jobId;
-(id)rac_getResumeDetailWithMMid:(id)mmid jobId:(int)anId showMobile:(BOOL)mobile;
-(id)rac_getTalentNotificationsWithStartPage:(int)startPage limit:(int)limit unreadFilter:(BOOL)filter beforeId:(int)anId;
-(id)rac_getTalentProfileOfMMId:(id)mmid;
-(id)rac_addTalentFeedWithText:(id)text images:(id)images imageIds:(id)ids hash:(id)hash anonymous:(BOOL)anonymous;
-(id)rac_getTalentFeedsWithStartPage:(int)startPage limit:(int)limit;
-(id)rac_clearAlerts:(id)alerts;
-(id)rac_unspreadUserWithMMid:(id)mmid;
-(id)rac_spreadUserWithMMid:(id)mmid;
-(id)rac_unlikeUserWithMMid:(id)mmid;
-(id)rac_likeUserWithMMid:(id)mmid;
-(id)rac_addTag:(id)tag forMMId:(id)mmid useAnonymousMode:(BOOL)mode fromMMId:(id)mmid4;
-(id)rac_complainMMId:(id)anId withReason:(id)reason fromMMId:(id)mmid;
-(id)rac_getFriendRequestOfMMId:(id)mmid includeHandled:(BOOL)handled;
-(id)rac_getFriendFeedsStartWithPage:(int)page limit:(int)limit ofMMId:(id)mmid;
-(id)rac_randomUpdateNicknameForMMId:(id)mmid;
-(id)rac_completeTask:(id)task taskType:(int)type frLV:(int)lv;
-(id)rac_clearBadgeCountType:(int)type mid:(id)mid forMMId:(id)mmid;
-(id)rac_getBadgeCount;
-(id)rac_bindWeibo:(id)weibo withWeiboToken:(id)weiboToken refreshToken:(id)token expireTime:(id)time forMMId:(id)mmid;
-(id)rac_changeAvatarWithImage:(id)image forMMId:(id)mmid;
-(id)rac_changeMobile:(id)mobile withVerifyCode:(id)verifyCode forMMId:(id)mmid;
-(id)rac_willChangeMobile:(id)mobile forMMId:(id)mmid;
-(id)rac_getUserProfileWithMMId:(id)mmid getMobile:(BOOL)mobile;
-(id)rac_getUserProfileWithMMId:(id)mmid;
-(id)rac_configSMSNotify:(BOOL)notify forMMId:(id)mmid;
-(id)rac_updateUserInfo:(id)info forMMId:(id)mmid;
-(id)rac_bindBaiduUserId:(id)anId andBaiduChannelId:(id)anId2 forMMId:(id)mmid withDeviceType:(int)deviceType versionNumber:(id)number channel:(id)channel;
-(id)rac_resetPassword:(id)password forMMId:(id)mmid withMobile:(id)mobile withVerifyCode:(id)verifyCode;
-(id)rac_sendVerifyCodeForResetPasswordToMobile:(id)mobile;
-(id)rac_loginWithMobile:(id)mobile password:(id)password;
-(id)rac_withToken:(id)token token:(id)token2;
-(id)rac_registerWithMobile:(id)mobile verifyCode:(id)code password:(id)password nickName:(id)name baiduUserId:(id)anId baiduChannelId:(id)anId6 deviceType:(int)type imei:(id)imei deviceToken:(id)token versionNumber:(id)number channel:(id)channel;
-(id)rac_sendRegisterCodeToMobile:(id)mobile;
-(id)rac_checkMobile:(id)mobile;
-(id)rac_unwillFeed:(unsigned long long)feed reason:(id)reason;
-(id)rac_ignoreAddContact:(id)contact;
-(id)rac_sendShowTime:(id)time;
-(id)rac_BlockFeedWithFid:(long long)fid;
-(id)rac_check_redpacket_refund:(id)refund;
-(id)rac_feedShareInfo:(unsigned long long)info;
-(id)rac_priorityVocationAdd:(unsigned long long)add marjor:(unsigned long long)marjor;
-(id)rac_feedTagsFocus:(id)focus follow:(BOOL)follow;
-(id)rac_searchFeedListWithCustomUrl:(id)customUrl startPage:(int)page count:(int)count;
-(id)rac_searchFeedListWithSearchKey:(id)searchKey startPage:(int)page count:(int)count;
-(id)rac_addFeedWithText:(id)text images:(id)images imageIds:(id)ids hash:(id)hash isLongTxt:(BOOL)txt selectAtUsers:(id)users tags:(id)tags orderid:(id)orderid circle_id:(int)anId;
-(id)rac_addFeedWithText:(id)text images:(id)images imageIds:(id)ids hash:(id)hash isLongTxt:(BOOL)txt selectAtUserJson:(id)userJson tags:(id)tags orderid:(id)orderid circle_id:(int)anId;
-(id)rac_deleteCommentWithId:(int)anId;
-(id)rac_addCommentWithMMID:(id)mmid text:(id)text replyToCommendId:(int)commendId selectAtUsers:(id)users;
-(id)rac_addCommentWithFeedId:(unsigned long long)feedId text:(id)text replyToCommendId:(int)commendId selectAtUsers:(id)users;
-(id)rac_addCommentWithMMID:(id)mmid text:(id)text selectAtUsers:(id)users;
-(id)rac_addCommentWithFeedId:(unsigned long long)feedId text:(id)text selectAtUsers:(id)users reply_to_fid:(unsigned long long)fid;
-(id)rac_deleteFeedWithId:(unsigned long long)anId;
-(id)rac_unspreadFeedWithId:(unsigned long long)anId;
-(id)rac_spreadGossipWithIdText:(unsigned long long)idText text:(id)text selectAtUsers:(id)users;
-(id)rac_spreadGossipWithId:(unsigned long long)anId;
-(id)rac_addSpreadGossipCount:(unsigned long long)count;
-(id)rac_isGossipSpreaded:(unsigned long long)spreaded;
-(id)rac_spreadFeedWithIdText:(unsigned long long)idText text:(id)text selectAtUsers:(id)users;
-(id)rac_spreadFeedWithId:(unsigned long long)anId;
-(id)rac_unlikeFeedWithId:(unsigned long long)anId;
-(id)rac_likeFeedWithId:(unsigned long long)anId;
-(id)rac_getFeedsListWithIds:(id)ids startPageIndex:(int)index andLimit:(unsigned)limit;
-(id)rac_getFeedCommentsWithId:(unsigned long long)anId page:(int)page count:(int)count;
-(id)rac_getFeedCommentsWithId:(unsigned long long)anId limit:(int)limit;
-(id)rac_getFeedWithId:(unsigned long long)anId;
-(id)rac_getFeedNotificationsWithStartPage:(int)startPage limit:(int)limit unreadFilter:(BOOL)filter beforeId:(int)anId;
-(id)rac_getGossipNotificationsWithStartPage:(int)startPage limit:(int)limit unreadFilter:(BOOL)filter beforeId:(int)anId;
-(id)rac_getAllSpreadsForFeedId:(unsigned long long)feedId;
-(id)rac_getAllLikesForFeedId:(unsigned long long)feedId;
-(id)rac_getMyCollectFeedListWithMinTime:(id)minTime limit:(int)limit;
-(id)rac_uncollectFeedWithFid:(long long)fid;
-(id)rac_collectFeedWithFid:(long long)fid;
-(id)rac_getMyCommentedFeedListWithStartPage:(int)startPage limit:(int)limit;
-(id)rac_getMySubmmitedFeedListWithStartPage:(int)startPage limit:(int)limit;
-(id)rac_addFace2FaceFriend:(id)aFriend accountFromSearch:(id)search;
-(id)rac_getFace2FaceFriendsWithUserMMId:(id)userMMId latitude:(double)latitude longitude:(double)longitude;
-(id)rac_getFeedListWithUserMMId:(id)userMMId startPage:(int)page limit:(int)limit;
-(id)rac_getFeedListWithApi:(id)api startPage:(int)page limit:(int)limit;
-(id)rac_getFeedListWithStartPage:(int)startPage limit:(int)limit cacheMode:(int)mode writeCache:(BOOL)cache;
-(id)sync_downloadImage:(id)image error:(id*)error;
-(id)rac_error_pingback:(id)pingback label:(id)label;
-(id)rac_uploadLogFile:(id)file;
-(id)rac_getMeetingSubjectTips;
-(id)rac_getMyMeeting;
-(id)rac_getNearbyMeeting:(double)meeting longitude:(double)longitude pageIndex:(unsigned)index count:(unsigned)count province:(id)province dayType:(int)type;
-(id)rac_updateMeeting:(long)meeting meetingDic:(id)dic;
-(id)rac_addMeeting:(id)meeting;
-(id)rac_preAddMeeting;
-(id)rac_checkTitle:(id)title;
-(id)rac_searchEverythingSuggestionWithKey:(id)key primaryType:(id)type;
-(id)rac_searchSuggestionWithKey:(id)key type:(int)type;
-(id)rac_uploadFileData:(id)data type:(int)type security:(int)security;
-(id)rac_uploadFileData:(id)data type:(int)type security:(int)security paramter:(id)paramter;
-(id)rac_uploadFile:(id)file fileData:(id)data type:(int)type;
-(id)rac_uploadImages:(id)images;
-(id)rac_complain:(id)complain reasonString:(id)string reportType:(int)type fid:(id)fid extraParam:(id)param;
-(id)rac_getMaiMaiLicense;
-(id)rac_getSearchKeywords;
-(id)rac_downloadImageWithUrlString:(id)urlString;
-(id)rac_getWeiboAPIStatus;
-(id)rac_liveVideOpen:(id)open;
-(id)rac_liveVideUsers:(id)users page:(int)page;
-(id)rac_liveVideLeave:(id)leave;
-(id)rac_liveVideEnter:(id)enter;
-(id)rac_uploadContact:(void*)contact withInviterMMID:(id)inviterMMID;
-(id)rac_uploadAddressBook:(BOOL)book inviterMMID:(id)mmid contacts:(id)contacts;
-(id)rac_uploadAddressBook:(BOOL)book inviterMMID:(id)mmid;
-(id)rac_preUploadAddressBook:(id)book;
@end

@interface ContactSubmodel: NSObject {}

@property(retain, nonatomic) NSString* title;
@property(retain, nonatomic) NSString* company;
@property(assign, nonatomic) BOOL isInCompany;
@property(retain, nonatomic) NSString* accountFromSearch;
@property(retain, nonatomic) NSString* localMobile;
@property(assign, nonatomic) unsigned inApp;
@property(assign, nonatomic) int isSent;
@property(assign, nonatomic) int sortKey;
@property(assign, nonatomic) int joinTime;
@property(assign, nonatomic) int dist;
@property(assign, nonatomic) unsigned rank;
@property(assign, nonatomic) unsigned commonFriendNum;
@property(assign, nonatomic) unsigned gender;
@property(assign, nonatomic) unsigned judge;
@property(retain, nonatomic) NSString* pinyin;
@property(retain, nonatomic) NSString* avatar;
@property(retain, nonatomic) NSString* line3;
@property(retain, nonatomic) NSString* line2;
@property(retain, nonatomic) NSString* line1;
@property(retain, nonatomic) NSString* name;
@property(retain, nonatomic) NSString* career;
@property(retain, nonatomic) NSString* ouid;
@property(retain, nonatomic) NSString* mmid;
@property(retain, nonatomic) NSString* ustr;
@property(retain, nonatomic) NSString* subTitle;
@property(retain, nonatomic) NSString* jobLine;

-(id)getPySortHeader;
-(void)innerInitwithDic:(id)dic;

@end